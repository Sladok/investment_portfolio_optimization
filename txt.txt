Пересоздай структуру проекта:
Scheduler НЕ нужен — вместо этого делаем асинхронную задачу, которая всегда работает.
WebSocket обновляет фронтенд в реальном времени.
Данные парсятся раз в 5 секунд и сохраняются в ClickHouse.
React подписывается на WebSocket и автоматически обновляет график.






investment_portfolio_optimization/
├── backend/                      # Серверная часть (FastAPI)
│   ├── app/
│   │   ├── main.py               # Точка входа FastAPI-приложения
│   │   ├── models/               # Модели данных (Pydantic/SQLAlchemy)
│   │   │   ├── __init__.py
│   │   │   ├── user.py           # Модель пользователя
│   │   │   └── portfolio.py      # Модель портфеля акций
│   │   ├── routers/              # Маршруты (API эндпоинты)
│   │   │   ├── __init__.py
│   │   │   ├── auth.py           # Эндпоинты для авторизации (регистрация, логин)
│   │   │   ├── portfolio.py      # Эндпоинты для управления портфелем
│   │   │   └── data.py           # Эндпоинты для работы с данными (парсинг акций)
│   │   ├── services/             # Логика приложения
│   │   │   ├── ml.py             # ML-модели для оптимизации портфеля
│   │   │   ├── nlp.py            # Анализ новостей (NLP)
│   │   │   ├── parsing.py        # Парсинг данных об акциях (например, с yfinance)
|   |   |   └── data_stream.py    # Фоновая асинхронная задача в FastAPI для каждые 5 секунд парсинга по API акций
│   │   └── utils/                # Вспомогательные функции
│   │       ├── __init__.py
│   │       └── database.py       # Подключение к ClickHouse
│   ├── tests/                    # Тесты для backend
│   │   ├── test_auth.py
│   │   ├── test_portfolio.py
│   │   └── test_data.py
│   └── requirements.txt          # Список Python-зависимостей
├── frontend/                     # Клиентская часть (React)
│   ├── public/                   # Публичные файлы
│   │   ├── index.html            # Главный HTML-файл
│   │   └── favicon.ico           # Иконка сайта
│   ├── src/                      # Исходный код React-приложения
│   │   ├── components/           # Общие компоненты
│   │   │   ├── Header.jsx
│   │   │   ├── Dashboard.jsx     # Дашборд с данными и графиками
│   │   │   ├── Portfolio.jsx     # Компонент для управления портфелем
│   │   │   └── NewsFeed.jsx      # Компонент для отображения новостей
│   │   ├── pages/                # Полноэкранные страницы
│   │   │   ├── Home.jsx          # Главная страница
│   │   │   ├── Portfolio.jsx     # Страница управления портфелем
│   │   │   └── Pricing.jsx       # Страница с тарифами/подписками (если нужно)
│   │   ├── App.jsx               # Корневой компонент React
│   │   └── index.js              # Точка входа React-приложения
│   └── package.json              # Конфигурация проекта Node.js и зависимости
├── data/                         # Данные для анализа
│   ├── raw/                      # Сырые данные (например, CSV с данными акций)
│   └── processed/                # Обработанные данные
├── docs/                         # Документация проекта
│   ├── README.md                 # Описание проекта, инструкции по запуску
│   ├── API_DOCS.md               # Документация по API эндпоинтам
│   └── ML_MODELS.md              # Описание ML-моделей и подходов
├── .gitignore                    # Список файлов/папок, которые игнорируются Git
└── LICENSE                       # Лицензия проекта (например, MIT)
