from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List
import uvicorn
from backend.app.routers import data
from fastapi.middleware.cors import CORSMiddleware


app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # üëà –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–æ–º–µ–Ω
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(data.router)

# –î–∞–Ω–Ω—ã–µ –æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö (–∏–º–∏—Ç–∞—Ü–∏—è –±–µ–∑ –ë–î)
# aapl = data.get_stock_price("AAPL")["price"]
# tsla = data.get_stock_price("TSLA")["price"]
# BTC = data.get_stock_price("BTC")["price"]

aapl, tsla, BTC = 0, 0, 0

assets = {
    "AAPL": {"symbol": "AAPL", "name": "Apple Inc.", "price": aapl, "change": -1.25},
    "TSLA": {"symbol": "TSLA", "name": "Tesla Inc.", "price": tsla, "change": 3.67},
    "BTC": {"symbol": "BTC", "name": "Bitcoin", "price": BTC, "change": 250.75}
}


# –ú–æ–¥–µ–ª—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Å –∞–∫—Ç–∏–≤–∞–º–∏
class Asset(BaseModel):
    symbol: str
    name: str
    price: float
    change: float

@app.get("/assets", response_model=List[Asset])
def get_assets():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–æ–≤."""
    return list(assets.values())

@app.get("/assets/{symbol}", response_model=Asset)
def get_asset(symbol: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∞–∫—Ç–∏–≤—É."""
    asset = assets.get(symbol.upper())
    if asset is None:
        raise HTTPException(status_code=404, detail="–ê–∫—Ç–∏–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return asset

@app.get("/news")
def get_market_news():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏."""
    return {
        "news": [
            {"title": "–§–æ–Ω–¥–æ–≤—ã–π —Ä—ã–Ω–æ–∫ –≤—ã—Ä–æ—Å –Ω–∞ 2%", "source": "Bloomberg"},
            {"title": "–ë–∏—Ç–∫–æ–∏–Ω –ø—Ä–æ–±–∏–ª —É—Ä–æ–≤–µ–Ω—å $38,000", "source": "CoinDesk"},
        ]
    }


# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é)
if __name__ == "__main__":
    uvicorn.run("main:app", reload=True)